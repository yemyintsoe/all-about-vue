### reactive is used to create object
# template
<div> {{ state.name }} </div>

# js
export default {
  setup(){
      const state = reactive({
      firstName: 'Ye  Myint',
      lastName: 'Soe'
    })
    
    const greet = `Hello ${state.firstName} ${state.lastName}`  // here we don't need to call ".value" just like when using "ref()"
    
    return {
      state,
      greet
    }
  }
}


### ref() vs reactive()
# when to use "ref()" and when to use "reactive()"
- we should use "ref()" when dealing primitive types such as String, Boolean, Number, etc...
- "reactive()" can only accept an Object


### if we want to output "reactive()" value we have to use like "state.firstName", now if what to output just like option api, do like the following...
#template
<div>{{ firstName }} {{ lastName }} </div>

# js
const state = reactive({
  firstName: 'Ye Myint Soe',
  lastName: 'Soe'
})

 return toRefs(state)
